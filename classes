from random import randrange
import pygame
import math

class Player():#設定玩家
    def __init__(self, ship, shiplvl):#建構子
        pygame.mouse.set_pos(500, 600)#設定游標初始位置
        pygame.mouse.set_visible(False)#游標不顯示
        self.image = pygame.image.load(ship)#初始飛機圖片
        if shiplvl == 1:#管理飛船等級
            self.life = 100
        if shiplvl == 2:
            self.life = 150
        if shiplvl == 3:
            self.life = 200
        if shiplvl == 4:
            self.life = 250
        self.x = 500
        self.y = 600
        self.timer = 30
        self.regen = 120
        self.specialAmmo = 10#特殊攻擊
        self.rect = pygame.Rect(self.x-20, self.y+5, 40, 40)#血量條

    def Keys(self, shot, text, run, weaponlvl):
        #設定不同等級的武器
        if weaponlvl == 1:
            if self.timer > 0:
                self.timer -= 1
            if self.timer <= 0:
                if pygame.mouse.get_pressed()[0]:
                    sound = pygame.mixer.Sound("Assets/shotm2.wav")
                    sound.play()
                    self.timer = 30
                    shot += [Shot(self.x-3, self.y, 25, 5, False, False, 'Assets/shot.png', 1)]
        if weaponlvl == 2:
            if self.timer > 0:
                self.timer -= 1
            if self.timer <= 0:
                if pygame.mouse.get_pressed()[0]:
                    sound = pygame.mixer.Sound("Assets/shotm2.wav")
                    sound.play()
                    self.timer = 30
                    shot += [Shot(self.x + 5, self.y+5, 20, 5, False, False, 'Assets/shot.png', 1)]
                    shot += [Shot(self.x - 10, self.y+5, 20, 5, False, False, 'Assets/shot.png', 1)]
        if weaponlvl == 3:
            if self.timer > 0:
                self.timer -= 1
            if self.timer <= 0:
                if pygame.mouse.get_pressed()[0]:
                    sound = pygame.mixer.Sound("Assets/shotm2.wav")
                    sound.play()
                    self.timer = 30
                    shot += [Shot(self.x - 3, self.y, 50, 7, False, False, 'Assets/shot.png', 1)]
        if weaponlvl == 4:
            if self.timer > 0:
                self.timer -= 1
            if self.timer <= 0:
                if pygame.mouse.get_pressed()[0]:
                    sound = pygame.mixer.Sound("Assets/shotm2.wav")
                    sound.play()
                    self.timer = 30
                    shot += [Shot(self.x + 5, self.y+5, 15, 5, False, False, 'Assets/shot.png', 1)]
                    shot += [Shot(self.x - 10, self.y+5, 15, 5, False, False, 'Assets/shot.png', 1)]
                    shot += [Shot(self.x - 3, self.y, 40, 7, False, False, 'Assets/shot.png', 1)]

        for event in pygame.event.get():
            if event.type == pygame.MOUSEMOTION:
                if pygame.mouse.get_pos()[0] > 50 and pygame.mouse.get_pos()[0] < 950:#限制飛船位置
                    self.x = pygame.mouse.get_pos()[0]
                if pygame.mouse.get_pos()[1] > 400 and pygame.mouse.get_pos()[1] < 625:#限制飛船位置
                    self.y = pygame.mouse.get_pos()[1]-25
            if event.type == pygame.MOUSEBUTTONDOWN:#按下右鍵發射特殊攻擊
                if pygame.mouse.get_pressed()[2]:
                    text = 120
                    if self.specialAmmo > 0:
                        self.specialAmmo -= 1
                        shot += [Shot(self.x-6, self.y, 100, 10, False, False, 'Assets/shot1.png', 1)]
            if event.type == pygame.KEYDOWN:#按ESC結束
                if event.key == pygame.K_ESCAPE: run = False
            if event.type == pygame.QUIT: pygame.quit()#按下關閉

        return text, run

    def Add(self, state, text, shiplvl):
        if state == 1:#補血包
            self.life += 25
            for x in range(4):
                if x + 1 == shiplvl:
                    if self.life > 100 + (50 * x):
                        self.life = 100 + (50 * x)

        if state == 2:#補充特別攻擊
            self.specialAmmo += 5
            text = 120

        if state == 3:           
            print("WIP")
        return text

    def Draw(self, main):#繪出圖形
        self.rect = pygame.Rect(self.x-20, self.y+5, 40, 40)
        main.blit(self.image, (self.x-25, self.y))

class Shot():#子彈
    def __init__(self, x, y, demage,speed, state, state2, spritePath, normal):#建構子
        self.image = pygame.image.load(spritePath)
        self.x = x
        self.y = y
        self.rect = pygame.Rect(self.x, self.y, 5, 15)#子彈大小
        self.dmg = demage#傷害
        self.reverse = state
        self.friendly = state2
        self.speed = speed#射速
        self.normal = normal#有兩種類型的子彈

    def Moviment(self):#子彈移動量
        if self.normal == 1:
            if self.reverse:
                self.y += self.speed
            else:
                self.y -= self.speed
        else:
            if self.reverse:
                self.y += self.speed
                if self.normal == 1.1:
                    self.x += 1
                else:
                    self.x += self.normal
            else:
                self.y -= self.speed

    def Draw(self, screen):#繪出子彈
        screen.blit(self.image, (self.x, self.y))
        self.rect = pygame.Rect(self.x, self.y, 5, 15)

    def Del(self):#子彈消失邊界
        self.x = -500
        self.y = 350

class Enemy():#敵人
    def __init__(self, x, y, life, mov, endmov, imagePath, endpos):#建構子
        self.life = life
        self.maxlife = life#最大血量
        self.image = pygame.image.load(imagePath)
        self.x = x
        self.y = y
        self.endmov = endmov
        self.mov = mov
        self.num = 0
        self.endpos = endpos
        if imagePath == 'Assets/enemy.png':#敵人分類
            self.enemy = 1
            self.rect = pygame.Rect(self.x, self.y, 44, 39)
        if imagePath == 'Assets/enemy1.png':
            self.enemy = 2
            self.rect = pygame.Rect(self.x, self.y, 75, 100)
        if imagePath == 'Assets/enemy2.png':
            self.enemy = 3
            self.rect = pygame.Rect(self.x, self.y, 50, 50)
        if imagePath == 'Assets/enemy3.png':
            self.enemy = 4
            self.rect = pygame.Rect(self.x, self.y, 218, 150)
        self.cooldown = randrange(60, 140, 20)

    def Fire(self, shot):
        if self.cooldown > 0:
            self.cooldown -= 1
        if self.cooldown == 0:

            if self.enemy == 1:
                shot += [Shot(self.x + 20, self.y + 40, 10,3, True, True, 'Assets/shot2.png', 1)]

            if self.enemy == 2:
                shot += [Shot(self.x + 10, self.y + 50, 10,3, True, True, 'Assets/shot2.png', 1)]
                shot += [Shot(self.x + 65, self.y + 50, 10, 3, True, True, 'Assets/shot2.png', 1)]
                shot += [Shot(self.x + 27, self.y + 50, 25, 5, True, True, 'Assets/shot3.png', 1)]
            if self.enemy == 3:
                shot += [Shot(self.x + 20, self.y + 40, 10,5, True, True, 'Assets/shot2.png', 1)]
                shot += [Shot(self.x + 20, self.y + 40, 10,5, True, True, 'Assets/shot2.png', 1)]
                shot += [Shot(self.x + 20, self.y + 40, 10,5, True, True, 'Assets/shot2.png', 1)]
            if self.enemy == 4:
                for x in range(-5,5):
                    if x == 1:
                        shot += [Shot(self.x + 100, self.y + 50, 10, 5, True, True, 'Assets/shot2.png', 1.1)]
                        shot += [Shot(self.x + 100, self.y + 50, 10, 5, True, True, 'Assets/shot2.png', 1)]
                    else:
                        shot += [Shot(self.x + 100, self.y + 50, 10, 5, True, True, 'Assets/shot2.png', x)]

            self.cooldown = randrange(60,140,20)

    def Draw(self, screen):#繪出敵人
        screen.blit(self.image, (self.x, self.y))
        if self.enemy == 1:
            self.rect = pygame.Rect(self.x,self.y, 44, 39)
        if self.enemy == 2:
            self.rect = pygame.Rect(self.x, self.y, 75, 100)
        if self.enemy == 3:
            self.rect = pygame.Rect(self.x, self.y, 50, 50)
        if self.enemy == 4:
            self.rect = pygame.Rect(self.x, self.y, 218, 150)

    def Moviment(self, shot, player):#敵人移動方式
        """
        if self.mov == 0:
            rand = randrange(4)+1
            if (rand == 1):
                if self.x > 50: self.x += 10
            if (rand == 2):
                if self.x < 900: self.x -= 10
            if (rand == 3):
                if self.y > 50: self.y -= 10
            if (rand == 4):
                if self.y < 550: self.y += 10
        """
        if self.endmov == 1:
            if self.endpos[0] > self.x:
                self.x += 2
            if self.endpos[0] < self.x:
                self.x -= 2
            if self.endpos[1] > self.y:
                self.y += 2
            if self.endpos[1] < self.y:
                self.y -= 2
            if self.endpos[0] == self.x and self.endpos[1] == self.y \
                or self.endpos[0] == self.x+1 and self.endpos[1] == self.y \
                or self.endpos[0] == self.x and self.endpos[1] == self.y+1\
                or self.endpos[0] == self.x+1 and self.endpos[1] == self.y+1: self.endmov = 0

        if self.endmov == 0 and self.x > 0:
            if self.mov >= 1 and self.mov < 2:
                if self.num == 0:
                    if self.x < 900:
                        self.x += 1
                    if self.x == 900:
                        self.num = 1
                elif self.num == 1:
                    if self.x > 50:
                        self.x -= 1
                    if self.x == 50:
                        self.num = 0
                self.mov += 0.0000001

            if self.mov >= 2 and self.mov < 3:
                if self.num == 0:
                    if self.x < 900:
                        self.x += 2
                        if self.x < 475:
                            self.y += 0.5
                        else:
                            self.y -= 0.5
                    if self.x == 901:
                        self.num = 1
                elif self.num == 1:
                    if self.x > 50:
                        self.x -= 2
                        if self.x < 475:
                            self.y -= 0.5
                        else:
                            self.y += 0.5
                    if self.x == 49:
                        self.num = 0
                self.mov += 0.0000001

            if self.mov >= 3 and self.mov < 4:
                if self.num == 0:
                    if self.x > 50:
                        self.x -= 2
                        if self.x < 475:
                            self.y -= 0.5
                        else:
                            self.y += 0.5
                    if self.x == 49:
                        self.num = 1
                elif self.num == 1:
                    if self.x < 900:
                        self.x += 2
                        if self.x < 475:
                            self.y += 0.5
                        else:
                            self.y -= 0.5
                    if self.x == 901:
                        self.num = 0
                self.mov += 0.0000001

            if self.mov == 4:
                    if player.x > self.x+40:
                        self.x += 0.5
                    if player.x < self.x+40:
                        self.x -= 0.5

            if self.mov >= 5 and self.mov < 6:
                if self.num == 0:
                    if self.x < self.endpos[0]+25:
                        self.x += 1
                    if self.x == self.endpos[0]+25:
                        self.num = 1
                elif self.num == 1:
                    if self.x > self.endpos[0]-20:
                        self.x -= 1
                    if self.x == self.endpos[0]-20:
                        self.num = 0
                self.mov += 0.0000001

            if self.mov == 6:
                x, y = pygame.mouse.get_pos()
                angle = math.atan2(self.x-x,self.y-y)
                pygame.transform.rotate(self.image,angle)
                angle = math.atan2(player.x-x,player.y-y)
                pygame.transform.rotate(player.image,angle)
                print(angle)

        if self.endmov == 0:
            return Enemy.Fire(self, shot)

    def Hurt(self, dmg, shot):#死亡特效
        self.life -= dmg
        if self.life <= 0:
            if self.enemy == 3 :
                for x in range(-5,5):
                    if x == 1:
                        shot += [Shot(self.x + 22, self.y + 50, 10, 5, True, True, 'Assets/shot2.png', 1.1)]
                        shot += [Shot(self.x + 22, self.y + 50, 10, 5, True, True, 'Assets/shot2.png', 1)]
                    else:
                        shot += [Shot(self.x + 22, self.y + 50, 10, 5, True, True, 'Assets/shot2.png', x)]
                
            if self.enemy == 4:
                for x in range(-5,5):
                    if x == 1:
                        shot += [Shot(self.x + 22, self.y + 50, 10, 5, True, True, 'Assets/shot2.png', 1.1)]
                        shot += [Shot(self.x + 22, self.y + 50, 10, 5, True, True, 'Assets/shot2.png', 1)]
                    else:
                        shot += [Shot(self.x + 22, self.y + 50, 10, 5, True, True, 'Assets/shot2.png', x)]
                self.x = 300
                self.y = -1000
                self.life=100000
            else:
                self.x = -100
                self.y = -100

class PickUp():
    def __init__(self, x, y, type):

        self.x = x
        self.y = y
        self.type = type
        if self.type == 1:
            self.image = pygame.image.load('Assets/pickup.png')
        if self.type == 2:
            self.image = pygame.image.load('Assets/pickup1.png')
        if self.type == 3:
            self.image = pygame.image.load('Assets/pickup2.png')
        self.rect = pygame.Rect(self.x, self.y, 25, 25)

    def Draw(self, screen):
        screen.blit(self.image, (self.x, self.y))
        self.rect = pygame.Rect(self.x,self.y, 25, 25)

    def Add(self):
        self.x = -50
        self.y = -50

    def Moviment(self):
        self.y+=1

def Verifications(player, enemy, shot, picks, deathCounter, totalKills, text, run, money, shiplvl):
    if deathCounter >= totalKills:
        print("Victory")
        run = False

    for x in range(len(picks)):
        if picks[x].rect.colliderect(player.rect):
            text = player.Add(picks[x].type, text, shiplvl)
            picks[x].Add()

    if player.regen > 0:
        player.regen -= 1
    if player.regen <= 0:
        player.regen = 120
        player.life += 5
        for x in range(4):
            if x + 1 == shiplvl:
                if player.life > 100 + (50 * x):
                    player.life = 100 + (50 * x)


    for x in range(len(shot)):
        if len(shot) > x:
            for y in range(len(enemy)):
                if shot[x].friendly == False:
                    if shot[x].rect.colliderect(enemy[y].rect):
                        if enemy[y].life-shot[x].dmg <= 0 and enemy[y].x > 0:
                            deathCounter += 1
                            money += 1
                            print(deathCounter,"/",totalKills)
                            if enemy[y].enemy == 1 or enemy[y].enemy == 3:
                                if (randrange(0,10) == 0):
                                    int = randrange(0, 2)
                                    if int == 0:
                                        picks += [PickUp(enemy[y].x, enemy[y].y, 1)]
                                    if int == 1:
                                        picks += [PickUp(enemy[y].x, enemy[y].y, 2)]
                                    if int == 2:
                                        picks += [PickUp(enemy[y].x, enemy[y].y, 3)]
                            if enemy[y].enemy == 2:
                                int = randrange(0, 2)
                                if int == 0:
                                    picks += [PickUp(enemy[y].x, enemy[y].y, 1)]
                                if int == 1:
                                    picks += [PickUp(enemy[y].x, enemy[y].y, 2)]
                                if int == 2:
                                    picks += [PickUp(enemy[y].x, enemy[y].y, 3)]
                        shot[x].Del()
                        enemy[y].Hurt(shot[x].dmg, shot)
            if shot[x].friendly == True:
                if (shot[x].rect.colliderect(player.rect)):
                    shot[x].Del()
                    player.life -= shot[x].dmg

    for x in range(len(enemy)):
        if enemy[x].rect.colliderect(player.rect):
            player.life -= 1

    if player.life <= 0:
        print("RIP")
    return money, deathCounter, text, run

def Ui(main, player, enemy, text, shiplvl):
    if text != 0:
        font = pygame.font.SysFont("Arial", 30, True)
        label = font.render(str(player.specialAmmo), 1, (255, 255, 0))
        main.blit(label, (player.x+50, player.y+10))
        text -= 1


    for x in range(4):
        if x+1 == shiplvl:
            if player.life != 100+(50*x):
                pygame.draw.rect(main, (100, 100, 100), ((player.x - 50, player.y + 60), (100, 10)), 5)
                pygame.draw.rect(main, (230, 30, 30), ((player.x - 50, player.y + 60), ((player.life*100)/(100 + x*50), 10)), 0)

    for x in range(len(enemy)):
        if enemy[x].maxlife == 1000:
            if enemy[x].life != 1000:
                pygame.draw.rect(main, (100, 100, 100), ((enemy[x].x-50, enemy[x].y - 15), (300, 10)), 5)
                pygame.draw.rect(main, (230, 30, 30), ((enemy[x].x-50, enemy[x].y - 15), ((enemy[x].life * 600) / 2000, 10)), 0)
        if enemy[x].maxlife == 500:
            if enemy[x].life != 500:
                pygame.draw.rect(main, (100, 100, 100), ((enemy[x].x-38, enemy[x].y - 15), (150, 10)), 5)
                pygame.draw.rect(main, (230, 30, 30), ((enemy[x].x-38, enemy[x].y - 15), ((enemy[x].life * 300) / 1000, 10)), 0)

        if enemy[x].maxlife == 250:
            if enemy[x].life != 250:
                pygame.draw.rect(main, (100, 100, 100), ((enemy[x].x-13, enemy[x].y - 15), (75, 10)), 5)
                pygame.draw.rect(main, (230, 30, 30), ((enemy[x].x-13, enemy[x].y - 15), ((enemy[x].life*75)/250, 10)), 0)

        if enemy[x].maxlife == 100:
            if enemy[x].life != 100:
                pygame.draw.rect(main, (100, 100, 100), ((enemy[x].x-4, enemy[x].y - 15), (50, 10)), 5)
                pygame.draw.rect(main, (230, 30, 30), ((enemy[x].x-4, enemy[x].y - 15), (enemy[x].life/2, 10)), 0)
    return text

def Draw(main, player, shot,enemy, picks):
    player.Draw(main)
    for x in range(len(shot)):
        if len(shot) > x:
            shot[x].Draw(main)
    for x in range(len(enemy)):
        enemy[x].Draw(main)
    for x in range(len(picks)):
        picks[x].Draw(main)
    pygame.display.update()

def Moviments(player, shot, enemy, picks):
    for x in range(len(shot) + 1):
        if len(shot) > x:
            shot[x].Moviment()
    for x in range(len(enemy)):
        if len(enemy) > x:
            if enemy[x].x != -100 and enemy[x].y != -100:
                enemy[x].Moviment(shot, player)
    for x in range(len(picks)):
        picks[x].Moviment()
    return enemy
